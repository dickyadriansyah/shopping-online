package dicky.entities;
// Generated Mar 13, 2017 9:18:13 PM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="orders"
    ,catalog="demo_spring"
)
public class Orders  implements java.io.Serializable {


     private Integer idOrders;
     private Account account;
     private Date tanggal;
     private Set<OrdersDetail> ordersDetails = new HashSet<OrdersDetail>(0);

    public Orders() {
    }

	
    public Orders(Account account, Date tanggal) {
        this.account = account;
        this.tanggal = tanggal;
    }
    public Orders(Account account, Date tanggal, Set<OrdersDetail> ordersDetails) {
       this.account = account;
       this.tanggal = tanggal;
       this.ordersDetails = ordersDetails;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_orders", unique=true, nullable=false)
    public Integer getIdOrders() {
        return this.idOrders;
    }
    
    public void setIdOrders(Integer idOrders) {
        this.idOrders = idOrders;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="username", nullable=false)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="tanggal", nullable=false, length=10)
    public Date getTanggal() {
        return this.tanggal;
    }
    
    public void setTanggal(Date tanggal) {
        this.tanggal = tanggal;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public Set<OrdersDetail> getOrdersDetails() {
        return this.ordersDetails;
    }
    
    public void setOrdersDetails(Set<OrdersDetail> ordersDetails) {
        this.ordersDetails = ordersDetails;
    }




}


